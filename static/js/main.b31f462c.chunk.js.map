{"version":3,"sources":["redux/dataSlice.js","components/navbar/index.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["initialState","value","page","undefined","contentItems","fetchDataByPage","createAsyncThunk","pageNum","a","axios","get","then","data","catch","err","response","dataSlice","createSlice","name","reducers","incrementByAmount","state","extraReducers","fulfilled","action","payload","push","content","actions","NavBar","className","ListingPage","React","lazy","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","dataReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAGMA,EAAe,CACnBC,MAAO,EACPC,UAAKC,EACLC,aAAa,IAKFC,EAAiBC,YAC1B,oBAD0C,uCAE1C,WAAOC,GAAP,eAAAC,EAAA,sEAC0BC,IAAMC,IAAN,uCAA0CH,EAA1C,UACrBI,MAAK,qBAAGC,QACRC,OAAM,SAACC,OAHZ,cACUC,EADV,yBAISA,EAASb,MAJlB,2CAF0C,uDAWjCc,EAAYC,YAAY,CACnCC,KAAM,OACNlB,eACAmB,SAAU,CACRC,kBAAoB,SAACC,GACjBA,EAAMpB,OAAO,IAGnBqB,cAAc,eACXjB,EAAgBkB,WAAY,SAACF,EAAOG,GAAY,IAAD,EAC5CH,EAAMnB,KAAKsB,EAAOC,SAClB,EAAAJ,EAAMjB,cAAasB,KAAnB,oBAA2BF,EAAOC,QAAQ,iBAAiBE,eASpDP,EAAsBJ,EAAUY,QAAhCR,kBAEAJ,MAAf,S,qKC1Bea,EAdF,WAET,OACI,sBAAKC,UAAU,SAAf,UACA,gCACA,sBAAMA,UAAU,SADhB,qBAKC,sBAAMA,UAAU,eCVnBC,EAAYC,IAAMC,MAAK,kBAAI,gCAiBlBC,MAbf,WACE,OACE,sBAAKJ,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUK,SAAU,0CAApB,SACA,cAACJ,EAAD,UCDSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCLDO,EAAQC,YAAe,CAClCC,QAAS,CACLlC,KAAKmC,O,QCKXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.b31f462c.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n  value: 1,\r\n  page:undefined,\r\n  contentItems:[],\r\n\r\n}\r\n\r\n\r\nexport const fetchDataByPage= createAsyncThunk(\r\n    'users/fetchByPage',\r\n    async (pageNum) => {\r\n        const response= await axios.get(`./API/CONTENTLISTINGPAGE-PAGE${pageNum}.json`)\r\n        .then(({ data })=> data)\r\n        .catch((err)=> {})\r\n      return response.page\r\n    \r\n    }\r\n  )\r\n\r\nexport const dataSlice = createSlice({\r\n  name: 'data',\r\n  initialState,\r\n  reducers: {\r\n    incrementByAmount:  (state) => {\r\n        state.value+=1\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchDataByPage.fulfilled]: (state, action) => {\r\n        state.page=action.payload\r\n        state.contentItems.push(...action.payload['content-items'].content)\r\n        \r\n        \r\n      },\r\n  },\r\n\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { incrementByAmount } = dataSlice.actions\r\n\r\nexport default dataSlice.reducer","import React from \"react\";\r\nimport \"./index.css\"\r\n\r\n\r\nconst NavBar=()=>{\r\n\r\n    return(\r\n        <div className=\"navbar\">\r\n        <div>\r\n        <span className=\"back\" />\r\n       \r\n       Romantic Comedy\r\n            </div> \r\n         <span className=\"search\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import './App.css';\nimport React, { Suspense } from 'react';\nimport NavBar from './components/navbar/index';\nconst ListingPage=React.lazy(()=>import('./components/ListingPage/index'))\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <NavBar />\n      <Suspense fallback={<div>Loading</div>}>\n      <ListingPage/>\n      </Suspense>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport dataReducer from \"./dataSlice\"\r\nexport const store = configureStore({\r\n  reducer: {\r\n      data:dataReducer\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from \"./redux/store\";\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}